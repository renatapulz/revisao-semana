{
  "swagger": "2.0",
  "info": {
    "title": "Backend - Revisão",
    "description": "Documentação do projeto de revisão usando Express e Sequelize",
    "version": "1.0.0"
  },
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Insira o token JWT"
    }
  },
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para logar um usuário.",
        "parameters": [
          {
            "name": "loginUsuario",
            "in": "body",
            "description": "Credenciais de login do usuário.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "teste@gmail.com"
                },
                "senha": {
                  "type": "string",
                  "example": "teste123"
                }
              },
              "required": [
                "email",
                "senha"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário logado com sucesso.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "jwt_token_aqui"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Erro na validação dos dados de entrada.",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Erro na validação"
                },
                "errors": {
                  "type": "array",
                  "example": [
                    "Detalhes do erro"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Email ou senha incorretos.",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Email ou senha incorretos"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Conta não encontrada.",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Conta não encontrada"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro ao realizar login.",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Erro ao realizar login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para cadastrar um novo usuário.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Informações do usuário para cadastro.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "João da Silva"
                },
                "email": {
                  "type": "string",
                  "example": "joao.silva@example.com"
                },
                "senha": {
                  "type": "string",
                  "example": "senha123"
                }
              },
              "required": [
                "nome",
                "email",
                "senha"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário cadastrado com sucesso.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "João da Silva"
                },
                "email": {
                  "type": "string",
                  "example": "joao.silva@example.com"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2024-09-01T00:00:00.000Z"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para excluir um usuário. Somente o prórpio usuário autenticado ou um administrador pode realizar esta ação.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário a ser excluído.",
            "example": 1
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Usuário excluído com sucesso. Nenhum conteúdo retornado."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Ação não permitida. O usuário só pode deletar sua própria conta ou um administrador pode excluir qualquer conta.",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ação não permitida. Você só pode deletar sua própria conta."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado com o ID fornecido.",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Usuário não encontrado."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro ao tentar excluir o usuário.",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Erro ao deletar usuário."
                },
                "error": {
                  "type": "string",
                  "example": "Detalhes do erro"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para obter um usuário pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário a ser buscado.",
            "example": 1
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário retornado com sucesso.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "example": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    },
                    "nome": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Maria Oliveira"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "maria.oliveira@example.com"
                        }
                      }
                    },
                    "permissao": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "admin"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "example": {
                          "type": "string",
                          "example": "2024-09-01T12:00:00.000Z"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "example": {
                          "type": "string",
                          "example": "2024-09-01T12:00:00.000Z"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Usuário não encontrado com o ID fornecido.",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Usuário não encontrado."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro ao buscar o usuário.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Erro ao buscar o usuário"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para atualizar um usuário pelo ID. Administradores podem atualizar qualquer usuário, enquanto usuários comuns só podem atualizar suas próprias informações.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário a ser atualizado.",
            "example": 1
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                },
                "permissao": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para obter a lista de todos os usuários.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Erro ao buscar a lista de usuários.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Erro ao buscar a lista de usuários"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}